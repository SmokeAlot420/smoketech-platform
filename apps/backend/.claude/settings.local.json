{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(source:*)",
      "Bash(./venv/Scripts/activate.bat)",
      "Bash(find:*)",
      "Bash(python -m pytest -v)",
      "Bash(timeout 30s python -m pytest:*)",
      "Bash(python -m pytest -v --tb=short)",
      "Bash(python -m pytest --tb=no -q)",
      "Bash(mv:*)",
      "Bash(npm install:*)",
      "Bash(mkdir:*)",
      "Bash(npm run test:*)",
      "mcp__archon__manage_task",
      "Bash(npx tsc:*)",
      "Read(//e/v2 repo/omega-platform/src/app/api/generate-videos/**)",
      "Read(//e/v2 repo/omega-platform/src/app/api/generate-images/**)",
      "Read(//e/v2 repo/omega-platform/src/app/api/generate-omega/**)",
      "Read(//e/v2 repo/omega-platform/src/app/api/image-to-video/**)",
      "mcp__firecrawl-mcp__firecrawl_search",
      "mcp__firecrawl-mcp__firecrawl_scrape",
      "Read(//e/v2 repo/omega-platform/**)",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_handle_dialog",
      "mcp__playwright__browser_close",
      "Bash(curl:*)",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_take_screenshot",
      "mcp__archon__rag_search_code_examples",
      "mcp__context7__resolve-library-id",
      "mcp__brave-search__brave_web_search",
      "Bash(npx tsx:*)",
      "Bash(findstr:*)",
      "Bash(set GEMINI_API_KEY=AIzaSyA7AwQNXJQOPnrTkNj4furl8sVtePgYoSQ)",
      "Bash(node:*)",
      "Read(//c/Users/Degen/Downloads/**)",
      "Bash(gcloud config set:*)",
      "Bash(gcloud projects:*)",
      "Read(//e/v2 repo/vertex-ai-creative-studio/experiments/veo3-character-consistency/**)",
      "Read(//e/v2 repo/vertex-ai-creative-studio/experiments/veo-genetic-prompt-optimizer/**)",
      "Read(//e/v2 repo/vertex-ai-creative-studio/config/**)",
      "mcp__archon__find_projects",
      "Bash(dir:*)",
      "Read(//e/v2 repo/vertex-ai-creative-studio/**)",
      "Read(//e/v2 repo/**)",
      "mcp__firecrawl__firecrawl_search",
      "Bash(test:*)",
      "WebFetch(domain:ui.shadcn.com)",
      "mcp__archon__find_tasks",
      "mcp__playwright__browser_press_key",
      "Bash(taskkill:*)",
      "mcp__playwright__browser_drag",
      "mcp__playwright__browser_file_upload",
      "Bash(timeout:*)",
      "mcp__archon__manage_project",
      "mcp__archon__rag_get_available_sources",
      "mcp__archon__rag_search_knowledge_base",
      "Bash(netstat:*)",
      "Bash(npm run dev)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(claude mcp remove:*)",
      "Bash(awk:*)",
      "mcp__archon__manage_document",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nrefactor: eliminate service duplication, use viral engine as source of truth\n\n- Delete veo3Service.ts (1,225 lines) - use viral/services/veo3Service via bridge\n- Delete rateLimiter.ts (162 lines) - use viral/utils/rateLimiter\n- Delete sora2Service.ts and sora2ExtendPipeline.ts (untracked duplicates)\n- Create sora2-bridge.ts for Sora2Service integration\n- Update veo3-bridge.ts to correctly map viral engine response format\n- Update API routes (generate-videos, extend-video) to import from bridges\n- Fix TypeScript type errors in API routes\n\nTotal: ~1,400 lines of duplicate code eliminated\n\nPhase 1 Complete: Service Consolidation âœ…\n\nðŸš¬ SmokeDev\nEOF\n)\")",
      "Bash(git commit:*)",
      "mcp__perplexity-ask__perplexity_ask",
      "Bash(robocopy:*)",
      "Bash(powershell:*)",
      "Bash(del nul)"
    ],
    "deny": []
  }
}
